@import "../../bower_components/include-media/dist/include-media";

/*
 set the defaults before we have the individual media queries
*/

.portrait, .landscape, .retina-2x, .retina-3x {
  display: none;
}

.game-container {
  display: block;
  font-size: 14px;
  border-radius: 3px;
}

.drag-container {
  display: block;
  //  background: $flesh;
  width: getDragContainerWidth('phone');
}

.instructions-row {
  height: getInstructionRowHeight('phone');
}

.controls-row {
  height: getControlsRowHeight('phone');
}

.square {
  width: getSquareDimension('phone');
  height: getSquareDimension('phone');
}

// phone
@include media(">=phone", "<tablet") {
  .game-row {
    height: getGameRowHeight('phone');
  }
  .game-container {
    width: getGameContainerWidth('phone');
    height: getGameContainerDimension('phone');
  }
  .game-board {
    width: getGameBoardDimension('phone');
    height: getGameBoardDimension('phone');
    margin-top: getBoardMargin('phone');
  }
  .game-board-large {
    width: getGameBoardDimensionLarge('phone');
    height: getGameBoardDimensionLarge('phone');
    margin-top: getBoardMarginLarge('phone');
  }
  .drag-container {
    width: getDragContainerWidth('phone');
    height: getDragContainerHeight('phone');
    margin-top: getDragContainerMargin('phone');
  }
  .instructions-row {
    height: getInstructionRowHeight('phone');
  }
  .controls-row {
    height: getControlsRowHeight('phone');
  }
  .hint {
    display: none;
  }
  .square {
    width: getSquareDimension('phone');
    height: getSquareDimension('phone');
  }
  .drag-text h1 {
    height: getSquareDimension('phone');
    line-height: getSquareDimension('phone');
    -webkit-text-stroke-width: 1px;
  }
  .drop-slot {
    margin: 0 1px;
  }
  .btn-draggable, .bgd-drag-square {
    border-width: 1px;
  }
}

// tablet
// iPad (first generation), iPad 2, iPad Mini (first generation) has 1024×768 pixels
// iPad Mini (second generation), iPad (third generation), iPad (fourth generation), iPad Air has 2048×1536px
@include media(">=tablet", '<2048px') {
  .game-row {
    height: getGameRowHeight('tablet');
  }
  .game-container {
    width: getGameContainerWidth('tablet');
    height: getGameContainerDimension('tablet');
    //    background: $green;

    margin-top: getGameContainerTopMargin('tablet');
  }
  .game-board {
    width: getGameBoardDimension('tablet');
    height: getGameBoardDimension('tablet');
    margin-top: getBoardMargin('tablet');
  }
  .game-board-large {
    width: getGameBoardDimensionLarge('tablet');
    height: getGameBoardDimensionLarge('tablet');
    margin-top: getBoardMarginLarge('tablet');
  }
  .drag-container {
    width: getDragContainerWidth('tablet');
    height: getDragContainerHeight('tablet');
    margin-top: getDragContainerMargin('tablet');
  }
  .instructions-row {
    height: getInstructionRowHeight('tablet');
  }
  .controls-row {
    height: getControlsRowHeight('tablet');
  }
  .square {
    width: getSquareDimension('tablet');
    height: getSquareDimension('tablet');
  }
  .drag-text h1 {
    width: getSquareDimension('tablet');
    height: getSquareDimension('tablet');
    line-height: getSquareDimension('tablet');
    font-size: ms(8);
  }
  .drop-slot, .indicator-square {
    margin: 0 4px;
  }
  .btn-draggable, .bgd-drag-square {
    border-width: 2px;
  }
  h3 {
    font-size: ms(6);
    line-height: ms(6) * $line-height-ratio;
  }
  h5 {
    font-size: ms(3);
    line-height: ms(3) * 1.5;
  }
  .instruction-text {
    max-width: 100%;
  }
}

//
@media screen and (orientation: portrait) {
  .portrait {
    display: block;
  }
}

@media screen and (orientation: landscape) {
  .landscape {
    display: block;
  }
}

// mobile in landscape
@media screen and (orientation: landscape) and (min-width: 320px) {
  .landscape {
    display: block;
  }
  .game-row {
    height: getGameRowHeight('phone-landscape');
    //    background: $lightGrey;
  }
  .game-container {
    height: getGameContainerDimension('phone-landscape');;
  }
}


// iPad 1 or 2 with portrait orientation. ( handles safari `vh` bug )
@media all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait){
  html, .column {
    width: 768px;
    height: 1024px;
  }
  .column {
//    background: $pink;
  }
}


// iPad 1 or 2 with landscape orientation. ( handles safari `vh` bug )
@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:landscape){
  html .column {
    width: 1024px;
    height: 768px;
  }
}

// iPad 3+ with portrait orientation. ( handles safari `vh` bug )
@media all and (device-width: 1536px) and (device-height: 2048px) and (orientation:portrait){
  html, .column {
    width: 1536px;
    height: 2048px;
  }
}

// iPad 3+ with landscape orientation. ( handles safari `vh` bug )
@media all and (device-width: 2048px) and (device-height: 1536px) and (orientation:landscape){
  html .column {
    width: 2048px;
    height: 1536px;
  }
}


// tablet in landscape
@media screen and (orientation: landscape) and (min-width: 768px) {
  .landscape {
    display: block;
  }
  .game-row {
    height: getGameRowHeight('tablet-landscape');
  }
  .game-container {
    height: getGameContainerDimension('tablet-landscape');;
  }
}

// retina2x
@include media("retina2x", ">=tablet") {
  .retina-2x {
    display: block;
  }
}

// retina3x ( iPhone 6 Plus )
@include media("retina3x", ">=tablet") {
  .retina-3x {
    display: block;
  }
}

// large desktop
@include media(">=2048px") {
  .game-row {
    height: getGameRowHeight('large-desktop');
  }
  .game-container {
    width: getGameContainerWidth('large-desktop');
    height: getGameContainerDimension('large-desktop');
  }
  .game-board {
    width: getGameBoardDimension('large-desktop');
    height: getGameBoardDimension('large-desktop');
    margin-top: getBoardMargin('large-desktop');
  }
  .drag-container {
    width: getDragContainerWidth('large-desktop');
    height: getDragContainerHeight('large-desktop');
    margin-top: getDragContainerMargin('large-desktop');
  }
  .instructions-row {
    height: getInstructionRowHeight('large-desktop');
  }
  .controls-row {
    height: getControlsRowHeight('large-desktop');
  }
  .square {
    width: getSquareDimension('large-desktop');
    height: getSquareDimension('large-desktop');
  }
  .drag-text h1 {
    height: getSquareDimension('large-desktop');
    line-height: getSquareDimension('large-desktop');
  }
  .drop-slot, .indicator-square {
    margin: 0 4px;
  }
  .btn-draggable, .bgd-drag-square {
    border-width: 2px;
  }
  h3 {
    font-size: ms(6);
    line-height: ms(6) * $line-height-ratio;
  }
  h5 {
    font-size: ms(3);
    line-height: ms(3) * 1.5;
  }
  .instruction-text {
    max-width: 100%;
  }
}

// print
@include media("print") {
  .game-container {
    background: $red;
  }
}


